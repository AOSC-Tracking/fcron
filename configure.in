dnl Process this file with autoconf to produce a configure script.

AC_INIT(allow.c)
prefix="/usr"
AC_PREFIX_DEFAULT($prefix)
AC_CONFIG_HEADER(config.h)
AC_PREREQ(2.7)

vers="0.9.5"
vers_quoted="\"$vers\""
AC_DEFINE_UNQUOTED(VERSION, $vers)
AC_DEFINE_UNQUOTED(VERSION_QUOTED, $vers_quoted)
VERSION="$vers"
AC_SUBST(VERSION)

dnl Checks for programs.
AC_PROG_CC
AC_PROG_INSTALL
AC_PROG_LN_S

dnl Checks for libraries.

dnl Checks for header files.
AC_HEADER_DIRENT
AC_HEADER_STDC
AC_HEADER_SYS_WAIT
AC_CHECK_HEADERS(fcntl.h sys/file.h sys/ioctl.h sys/time.h syslog.h unistd.h)
AC_CHECK_HEADERS(errno.h sys/fcntl.h getopt.h limits.h)
AC_CHECK_HEADERS(stdarg.h)

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_TYPE_PID_T
AC_TYPE_SIZE_T
AC_HEADER_TIME
AC_STRUCT_TM
AC_TYPE_UID_T

dnl Checks for library functions.
AC_PROG_GCC_TRADITIONAL
AC_FUNC_MEMCMP
AC_TYPE_SIGNAL
AC_FUNC_STRFTIME
AC_FUNC_WAIT3
AC_CHECK_FUNC(getloadavg, [getloadavg=1], [getloadavg=0])
AC_FUNC_GETLOADAVG
AC_CHECK_FUNCS(getcwd gettimeofday mktime putenv strerror setenv gethostname)
AC_CHECK_FUNCS(mkstemp)
AC_CHECK_FUNCS(setreuid, [setreuid=1], [setreuid=0])
AC_CHECK_FUNCS(setregid, [setregid=1], [setregid=0])

dnl Checks for programs.

AC_ARG_WITH(sendmail,
[  --with-sendmail=PATH	Path to sendmail.],
[ case "$withval" in
  no)
    AC_MSG_CHECKING(sendmail)
    AC_MSG_WARN([

Without sendmail you won't get the output of the jobs by mail
])
    ;;
  yes)
    AC_PATH_PROG(SENDMAIL, sendmail, , $PATH:/usr/lib:/usr/sbin )
    if test "$ac_cv_path_SENDMAIL" != "" ; then
      AC_DEFINE_UNQUOTED(SENDMAIL,"$ac_cv_path_SENDMAIL")
    else
      AC_MSG_ERROR([
Cannot determine path to sendmail: try option --with-sendmail=PATH])
    fi
    ;;
  *)
    AC_MSG_CHECKING(sendmail)
    if test -f "$withval"; then
      AC_DEFINE_UNQUOTED(SENDMAIL, "$withval")
      AC_MSG_RESULT($withval)
    else
      AC_MSG_ERROR([
file $withval does not exist])
    fi
    ;;
  esac ], [
  AC_PATH_PROG(SENDMAIL, sendmail, , $PATH:/usr/lib:/usr/sbin )
  if test "$ac_cv_path_SENDMAIL" != "" ; then
     AC_DEFINE_UNQUOTED(SENDMAIL,"$ac_cv_path_SENDMAIL")
  else
     AC_MSG_ERROR([
Cannot determine path to sendmail: try option --with-sendmail=PATH])
  fi ]
)

AC_ARG_WITH(shell,
[  --with-shell=PATH	Path to default shell (by default, path to sh).],
[ case "$withval" in
  no)
    AC_MSG_CHECKING(shell)
    AC_MSG_ERROR(Need a default shell)
    ;;
  yes)
    AC_PATH_PROG(SHELL, sh, , $PATH)
    if test "$ac_cv_path_SHELL" != "" ; then
      AC_DEFINE_UNQUOTED(SHELL,"$ac_cv_path_SHELL")
    else
      AC_MSG_ERROR([
Cannot determine path to sh: try option --with-shell=PATH])
    fi
    ;;
  *)
    AC_MSG_CHECKING(shell)
    if test -f "$withval"; then
      AC_DEFINE_UNQUOTED(SHELL, "$withval")
      AC_MSG_RESULT($withval)
    else
      AC_MSG_ERROR([
file $withval does not exist])
    fi
    ;;
  esac ], [
  AC_PATH_PROG(SHELL, sh, , $PATH)
  if test "$ac_cv_path_SHELL" != "" ; then
     AC_DEFINE_UNQUOTED(SHELL,"$ac_cv_path_SHELL")
  else
     AC_MSG_ERROR([
Cannot determine path to sh: try option --with-shell=PATH])
  fi ]
)

AC_ARG_WITH(editor,
[  --with-editor=PATH	Path to default editor (by default, path to vi.],
[ case "$withval" in
  no)
    AC_MSG_CHECKING(editor)
    AC_MSG_ERROR([Need a default editor])
    ;;
  yes)
    AC_PATH_PROG(EDITOR, vi)
    if test "$ac_cv_path_EDITOR" != "" ; then
      AC_DEFINE_UNQUOTED(EDITOR,"$ac_cv_path_EDITOR")
    else
      AC_MSG_ERROR([
Cannot determine path to vi: try option --with-editor=PATH])
    fi
    ;;
  *)
    AC_MSG_CHECKING(editor)
    if test -f "$withval"; then
      AC_DEFINE_UNQUOTED(EDITOR, "$withval")
      AC_MSG_RESULT($withval)
    else
      AC_MSG_ERROR([
file $withval does not exist])
    fi
    ;;
  esac ], [
  AC_PATH_PROG(EDITOR, vi)
  if test "$ac_cv_path_EDITOR" != "" ; then
     AC_DEFINE_UNQUOTED(EDITOR,"$ac_cv_path_EDITOR")
  else
     AC_MSG_ERROR([
Cannot determine path to vi: try option --with-editor=PATH])
  fi ]
)

AC_MSG_CHECKING(location of etc directory)
AC_ARG_WITH(etcdir,
[  --with-etcdir=PATH	Directory containing permission files (default /etc).],
[ case "$withval" in
  no)
    AC_MSG_ERROR(Need ETCDIR.)
    ;;
  yes)
    if test -d "/etc"; then
      etcdir=/etc
      AC_MSG_RESULT(/etc)
    else
      AC_MSG_ERROR(directory /etc does not exist: try option --with-etcdir=PATH)
    fi
    ;;
  *)
    etcdir="$withval"
    AC_MSG_RESULT($withval)
    ;;
  esac ],
  if test -d "/etc"; then
    etcdir="/etc"
    AC_MSG_RESULT(/etc)
  else
    AC_MSG_ERROR(directory /etc does not exist: try option --with-etcdir=PATH)
  fi
)
ETC="$etcdir"
AC_DEFINE_UNQUOTED(ETC, "$etcdir")
AC_SUBST(ETC)

AC_MSG_CHECKING(location of pid file)
if test -d /var/run ; then
    AC_DEFINE(PIDFILE, "/var/run/fcron.pid")
    AC_MSG_RESULT(/var/run)
elif test -d /usr/run ; then
    AC_DEFINE(PIDFILE, "/usr/run/fcron.pid")
    AC_MSG_RESULT(/usr/run)
else
    AC_DEFINE_UNQUOTED(PIDFILE, "$ETC/fcron.pid")
    AC_MSG_RESULT($ETC)
fi

AC_MSG_CHECKING(location of spool directory)
AC_ARG_WITH(spooldir,
[  --with-spooldir=PATH	Directory containing fcron spool (default /var/spool/fcron).],
[ case "$withval" in
  no)
    AC_MSG_ERROR(Need SPOOLDIR.)
    ;;
  yes)
    if test -d /var/spool/fcron ; then
        sp=/var/spool/fcron
        AC_MSG_RESULT(Using existing /var/spool/fcron)
    elif  test -d /var/spool/ ; then
       sp=/var/spool/fcron
       AC_MSG_RESULT(/var/spool/fcron)
    elif test -d /usr/spool/ ; then
       sp=/usr/spool/fcron
       AC_MSG_RESULT(/usr/spool/fcron)
    else
       AC_MSG_ERROR(Cannot determine value for spool directory: try option --with-spooldir=PATH)
    fi
    ;;
  *)
    sp="$withval"
    AC_MSG_RESULT($withval)
    ;;
  esac ],
  if test -d /var/spool/fcron ; then
      sp=/var/spool/fcron
      AC_MSG_RESULT(Using existing /var/spool/fcron)
  elif  test -d /var/spool/ ; then
      sp=/var/spool/fcron
      AC_MSG_RESULT(/var/spool/fcron)
  elif test -d /usr/spool/ ; then
      sp=/usr/spool/fcron
      AC_MSG_RESULT(/usr/spool/fcron)
  else
      AC_MSG_ERROR(Cannot determine value for spool directory: try option --with-spooldir=PATH)
  fi
)
FCRONTABS="$sp"
AC_DEFINE_UNQUOTED(FCRONTABS, "$sp")
AC_SUBST(FCRONTABS)

if test $getloadavg -eq 0  ; then
AC_MSG_CHECKING(proc directory)
AC_ARG_WITH(proc,
[  --with-proc=PATH	Directory where linux procfs is mounted (default /proc).],
[ case "$withval" in
  no)
    AC_MSG_WARN([
Without proc, you won't be able to use the lavg* options 
])
    AC_DEFINE(NOLOADAVG)
    ;;
  yes)
    if test -f /proc/loadavg ; then
        proc="/proc"
        AC_MSG_RESULT(/proc)
    else
       AC_MSG_ERROR(Cannot determine value for proc directory: try option --with-proc=PATH)
    fi
    ;;
  *)
    if test -f "$withval/loadavg"; then
      proc="$withval"
      AC_MSG_RESULT($withval)
    else
      AC_MSG_ERROR(directory $withval does not exist)
    fi
    ;;
  esac ],
  if test -f "/proc/loadavg" ; then
      proc="/proc"
      AC_MSG_RESULT(/proc)
  else
     AC_MSG_ERROR(Cannot determine value for proc directory: try option --with-proc=PATH)
  fi
)
PROC="$proc"
AC_DEFINE_UNQUOTED(PROC, "$proc")
AC_SUBST(PROC)
fi

AC_ARG_WITH(debug,
[  --with-debug=CFLAGS	Use default debug flags or CFLAGS if given to compile fcron in debug mode.],
[ case "$withval" in
  no)
    cflags="-O2 -Wall"
    debug="0"
    ;;
  yes)
    cflags="-DDEBUG -g -DFOREGROUND -DMALLOC_CHECK_=2 -Wpointer-arith -Wstrict-prototypes"
    debug="1"
    ;;
  *)
    cflags="$withval"
    debug="1"
    ;;
  esac ],
    cflags="-O2 -Wall"
    debug="0"
)
DEBUG=$debug
AC_SUBST(DEBUG)


AC_ARG_WITH(cflags,
[  --with-cflags=CFLAGS	Use CFLAGS flags to compile fcron.],
[ case "$withval" in
  no)
    AC_MSG_ERROR(Need an explicit value for --with-cflags.)
    ;;
  yes)
    AC_MSG_ERROR(Need an explicit value for --with-cflags.)
    ;;
  *)
    cflags="$withval"
    ;;
  esac ],
)
CFLAGS=$cflags
AC_DEFINE_UNQUOTED(CFLAGS, "$cflags")


AC_MSG_CHECKING(location of man directory)
AC_ARG_WITH(mandir,
[  --with-mandir=PATH	Root directory for manual pages.],
[ case "$withval" in
  no)
    AC_MSG_ERROR(Need MANDIR.)
    ;;
  yes)
    if test -d "$prefix/man" ; then
        mandir="$prefix/man"
        AC_MSG_RESULT($prefix/man)
    elif  test -d "$prefix/share/man" ; then
       mandir="$prefix/share/man"
       AC_MSG_RESULT($prefix/share/man)
    elif  test -d "$prefix/local/share/man" ; then
       mandir="$prefix/local/share/man"
       AC_MSG_RESULT($prefix/local/share/man)
    else
       AC_MSG_ERROR(Cannot determine value for man directory: try option --with-mandir=PATH)
    fi
    ;;
  *)
    mandir="$withval"
    AC_MSG_RESULT($withval)
    ;;
  esac ],
  if test -d "$prefix/man" ; then
      mandir="$prefix/man"
      AC_MSG_RESULT($prefix/man)
  elif  test -d "$prefix/share/man" ; then
     mandir="$prefix/share/man"
     AC_MSG_RESULT($prefix/share/man)
  elif  test -d "$prefix/local/share/man" ; then
     mandir="$prefix/local/share/man"
     AC_MSG_RESULT($prefix/local/share/man)
  else
     AC_MSG_ERROR(Cannot determine value for man directory: try option --with-mandir=PATH)
  fi
)
MANDIR="$mandir"
AC_DEFINE_UNQUOTED(MANDIR, "$mandir")
AC_SUBST(MANDIR)


AC_MSG_CHECKING(location of doc directory)
AC_ARG_WITH(docdir,
[  --with-docdir=PATH	Directory containing documentation.],
[ case "$withval" in
  no)
    AC_MSG_ERROR(Need DOCDIR.)
    ;;
  yes)
    if test -d "$prefix/doc" ; then
        docdir="$prefix/doc"
        AC_MSG_RESULT($prefix/doc)
    elif  test -d "$prefix/share/doc" ; then
       docdir="$prefix/share/doc"
       AC_MSG_RESULT($prefix/share/doc)
    elif  test -d "$prefix/local/share/doc" ; then
       docdir="$prefix/local/share/doc"
       AC_MSG_RESULT($prefix/local/share/doc)
    else
       AC_MSG_ERROR(Cannot determine value for doc directory: try option --with-docdir=PATH)
    fi
    ;;
  *)
    docdir="$withval"
    AC_MSG_RESULT($withval)
    ;;
  esac ],
  if test -d "$prefix/doc" ; then
      docdir="$prefix/doc"
      AC_MSG_RESULT($prefix/doc)
  elif  test -d "$prefix/share/doc" ; then
     docdir="$prefix/share/doc"
     AC_MSG_RESULT($prefix/share/doc)
  elif  test -d "$prefix/local/share/doc" ; then
     docdir="$prefix/local/share/doc"
     AC_MSG_RESULT($prefix/local/share/doc)
  else
     AC_MSG_ERROR(Cannot determine value for doc directory: try option --with-docdir=PATH)
  fi
)
DOCDIR="$docdir"
AC_DEFINE_UNQUOTED(DOCDIR, "$docdir")
AC_SUBST(DOCDIR)

AC_MSG_CHECKING(automatic answer to make install's questions)
AC_ARG_WITH(answer-all,
[  --with-answer-all=[yes|no]	Answer the argument to every make install's questions.],
[ case "$withval" in
  no)
    answerall=0
    AC_MSG_RESULT(yes (answer "no"))
    ;;
  yes)
    answerall=1
    AC_MSG_RESULT(yes (answer "yes"))
    ;;
  *)
    AC_MSG_ERROR(Must be set to either "yes" or "no".)
    ;;
  esac ],
    answerall=2
    AC_MSG_RESULT(no)
)
ANSWERALL="$answerall"
AC_DEFINE_UNQUOTED(ANSWERALL, "$answerall")
AC_SUBST(ANSWERALL)


AC_MSG_CHECKING(root's username)
AC_ARG_WITH(rootname,
[ --with-rootname=USERNAME	Root's username (default root) ],
[ case "$withval" in
  no)
    AC_MSG_ERROR(Need rootname.)
    ;;
  yes)
    if cat /etc/passwd | grep "^root:" > /dev/null; then
	rootname=root
        AC_MSG_RESULT(root)
    else
	AC_MSG_ERROR(Cannot determine root's username: try option --with-rootname=USERNAME)
    fi
    ;;
  *)
    if cat /etc/passwd | grep "^$withval:" > /dev/null ; then
	rootname=$withval
        AC_MSG_RESULT(root)
    else
	AC_MSG_ERROR(Invalid root's username : not in /etc/passwd)
    fi
    ;;
    esac ],
    if cat /etc/passwd | grep "^root:" > /dev/null ; then
	rootname=root
        AC_MSG_RESULT(root)
    else
	AC_MSG_ERROR(Cannot determine root's username: try option --with-rootname=USERNAME)
    fi
)

AC_MSG_CHECKING(root's groupname)
AC_ARG_WITH(rootgroup,
[ --with-rootgroup=GROUPNAME	Root's groupname (default root) ],
[ case "$withval" in
  no)
    AC_MSG_ERROR(Need rootgroup.)
    ;;
  yes)
    if cat /etc/group | grep "^root:" > /dev/null ; then
	rootgroup=root
        AC_MSG_RESULT(root)
    else
	AC_MSG_ERROR(Cannot determine root's groupname: try option --with-rootgroup=GROUPNAME)
    fi
    ;;
  *)
    if cat /etc/group | grep "^$withval:" > /dev/null ; then
	rootgroup=$withval
        AC_MSG_RESULT(root)
    else
	AC_MSG_ERROR(Invalid root's groupname : not in /etc/group)
    fi
    ;;
    esac ],
    if cat /etc/group | grep "^root:" > /dev/null ; then
	rootgroup=root
        AC_MSG_RESULT(root)
    else
	AC_MSG_ERROR(Cannot determine root's groupname: try option --with-rootgroup=GROUPNAME)
    fi
)

ROOTNAME="$rootname"
AC_SUBST(ROOTNAME)
AC_DEFINE_UNQUOTED(ROOTNAME, "$rootname")
ROOTGROUP="$rootgroup"
AC_SUBST(ROOTGROUP)
AC_DEFINE_UNQUOTED(ROOTGROUP, "$rootgroup")

if test \( $setreuid -eq 0 \) -o \( $setregid -eq 0 \) ; then
	username="$rootname"
	groupname="$rootgroup"
else

AC_MSG_CHECKING(username to run under)
AC_ARG_WITH(username,
[ --with-username=USERNAME	Username to run under (default fcron) ],
[ case "$withval" in
  no)
    AC_MSG_ERROR(Need USERNAME.)
    ;;
  yes)
    if test \( $setreuid -eq 1 \) -a \( $setregid -eq 1 \) ; then
	username=fcron
	AC_MSG_RESULT(fcron)
    else
        AC_MSG_RESULT(root)
    fi
    ;;
  *)
    if test \( $setreuid -eq 1 \) -a \( $setregid -eq 1 \) ; then
	username="$withval";
	AC_MSG_RESULT($withval)
    else
	AC_MSG_RESULT(root)
	AC_MSG_WARN(username must be root as your system has no seteuid)
    fi
    ;;
    esac ],
    if test \( $setreuid -eq 1 \) -a \( $setregid -eq 1 \) ; then
	username=fcron
	AC_MSG_RESULT(fcron)
    else
        AC_MSG_RESULT(root)
    fi
)

AC_MSG_CHECKING(groupname to run under)
AC_ARG_WITH(groupname,
[ --with-groupname=GROUPNAME	Groupname to run under (default fcron) ],
[ case "$withval" in
  no)
    AC_MSG_ERROR(Need GROUPNAME.)
    ;;
  yes)
    if test \( $setreuid -eq 1 \) -a \( $setregid -eq 1 \) ; then
	groupname=fcron
	AC_MSG_RESULT(fcron)
    else
        AC_MSG_RESULT(root)
    fi
    ;;
  *)
    if test \( $setreuid -eq 1 \) -a \( $setregid -eq 1 \) ; then
	groupname="$withval";
	AC_MSG_RESULT($withval)
    else
	AC_MSG_RESULT(root)
	AC_MSG_WARN(groupname must be root as your system has no setegid)
    fi
    ;;
    esac ],
    if test \( $setreuid -eq 1 \) -a \( $setregid -eq 1 \) ; then
	groupname=fcron
	AC_MSG_RESULT(fcron)
    else
        AC_MSG_RESULT(root)
    fi
)

fi

USERNAME="$username"
AC_SUBST(USERNAME)
AC_DEFINE_UNQUOTED(USERNAME, "$username")
GROUPNAME="$groupname"
AC_SUBST(GROUPNAME)
AC_DEFINE_UNQUOTED(GROUPNAME, "$groupname")

AC_OUTPUT(Makefile)


