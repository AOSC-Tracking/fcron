<!-- 
Fcron documentation
Copyright 2000-2002 Thibault Godouet <fcron@free.fr>
Permission is granted to copy, distribute and/or modify this
document under the terms of the GNU Free Documentation License,
Version 1.1 or any later version published by the Free Software
Foundation.
A copy of the license is included in gfdl.sgml.
-->

<!-- $Id: todo.sgml,v 1.4 2002-02-16 09:58:35 thib Exp $ -->

<sect1 id="todo">
    <title>Todo</title>
    <para>Here are some things that should be done ...</para>
    <para>If you plan to help me, please send a mail at &email; to prevent two people from doing the same thing. You can send me some propositions as well.</para>
    <itemizedlist>
	<listitem>
	    <para>PAM support (ongoing)</para>
	</listitem>
	<listitem>
	    <para>convert the doc into DocBook(ongoing), and make it easier to read and understand</para>
	</listitem>
	<listitem>
	    <para>add some more checks in fileconf.c : do not allow user to use hours, days, hourly (?), daily (?), etc with &-lines : it currently does nothing (no error, no special action), and it is quite confusing for users. (those options only work with %-lines).</para>
	</listitem>
	<listitem>
	    <para>allow a non-privileged user to run fcron</para>
	</listitem>
	<listitem>
	    <para>add a "random" option to %-lines, to change policy from : "run as soon as possible" to "set a random time to sleep before execing asap" (and then run - if the system hasn't gone down ...).</para>
	</listitem>
	<listitem>
	    <para>add a return code for jobs which would mean that they should not be run again (in case of an error, etc...).</para>
	</listitem>
	<listitem>
	    <para>possibility to display a list of jobs including their options, time and date of next execution, status, of only the running jobs, all the jobs, in order of execution or classified by user, etc.</para>
	</listitem>
	<listitem>
	    <para>run one of this job, change its nice value, stop it...</para>
	</listitem>
	<listitem>
	    <para>add a system of modules : at startup, fcron loads some modules
                  (.so files). Then, when fcron should run the job, it calls a function
                  of the module, and let it manage the job (threads ?). (do linux
                  dlopen(), etc exist on other systems ?).</para>
	</listitem>
	<listitem>
	    <para>add a system of data flow</para>
	</listitem>
    </itemizedlist>
</sect1>


<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-parent-document:("fcron-doc.sgml" "book" "chapter" "sect1" "")
sgml-default-dtd-file: "fcron-doc.ced"
End:
-->
