############################
# fcron's Makefile  ########
############################

# @configure_input@

# $Id: Makefile.in,v 1.81 2002-01-03 14:35:17 thib Exp $

# The following should not be edited manually (use configure options)
# If you must do it, BEWARE : some of the following is also defined
# in config.h, so you must modify config.h AND Makefile in order
# to set the same values in the two files.

SRCDIR		= @srcdir@

# Where should we install it ?
prefix		= @prefix@
# We set exec_prefix to $prefix (if you change this, you should also change
#  it in configure.in)
exec_prefix	= @exec_prefix@
DESTSBIN	= @sbindir@
DESTBIN		= @bindir@
DESTMAN		= @mandir@
DESTDOC		= @DOCDIR@
FCRONTABS	= @FCRONTABS@
ETC		= @ETC@
OPTIM		= @CFLAGS@
LDFLAGS		= @LDFLAGS@
CPPFLAGS	= @CPPFLAGS@ -I. -I${SRCDIR}
LIBS		= @LIBS@
LIBOBJS		= @LIBOBJS@
DEFS		= @DEFS@ 
CC		= @CC@
INSTALL		= @INSTALL@
ROOTNAME	= @ROOTNAME@
ROOTGROUP	= @ROOTGROUP@
USERNAME 	= @USERNAME@
GROUPNAME	= @GROUPNAME@
DEBUG		= @DEBUG@
ANSWERALL	= @ANSWERALL@
USEPAM		= @USEPAM@

# Options
#	-DDEBUG		even more verbose
#	-DCHECKJOBS     send a mail containing the exact shell command
#			for each execution of each job.
#	-DFOREGROUND=[0|1]    default run in foreground ?
#OPTION=	-DCHECKJOBS
#OPTION=	-O3 -mcpu=i686
OPTION = 


####################################
# Should not be changed under this #
####################################

VERSION = @VERSION@
CFLAGS = $(OPTIM) $(OPTION) $(DEFS) $(CPPFLAGS)
OBJSD = fcron.o subs.o log.o database.o job.o conf.o $(LIBOBJS)
OBJS = fcrontab.o subs.o log.o fileconf.o allow.o
OBJCONV = convert-fcrontab.o subs.o log.o
OBJSIG = fcronsighup.o subs.o log.o allow.o
HEADERSALL = config.h $(SRCDIR)/global.h $(SRCDIR)/log.h $(SRCDIR)/subs.h $(SRCDIR)/save.h $(SRCDIR)/option.h 
HEADERSD = $(HEADERSALL) $(SRCDIR)/fcron.h $(SRCDIR)/getloadavg.h $(SRCDIR)/database.h $(SRCDIR)/conf.h $(SRCDIR)/job.h
HEADERS = $(HEADERSALL) $(SRCDIR)/fcrontab.h $(SRCDIR)/allow.h $(SRCDIR)/fileconf.h
HEADERSCONV = $(HEADERSALL)
HEADERSSIG = $(HEADERSALL) $(SRCDIR)/allow.h

# this is a regular expression :
# do not ci automaticaly generated files and doc (done by doc's Makefile)
RCSNOCI=.*\(.html\|VERSION\|MANIFEST\|configure\|install.sh\|doc.*\)

all: fcron fcrontab convert-fcrontab files/fcron.conf

fcron: $(OBJSD) $(HEADERSD)
	$(CC) $(CFLAGS) -o $@ $(OBJSD) $(LIBS)

fcrontab: fcronsighup $(OBJS) $(HEADERS)
	$(CC) $(CFLAGS) -o $@ $(OBJS) $(LIBS)

fcronsighup: $(OBJSIG) $(HEADERSSIG)
	$(CC) $(CFLAGS) -o $@ $(OBJSIG) $(LIBS)

convert-fcrontab: $(OBJCONV) $(HEADERSCONV) 
	$(CC) $(CFLAGS) -o $@ $(OBJCONV) $(LIBS)

%.o: $(SRCDIR)/%.c $(HEADERSALL) $(SRCDIR)/%.h
	$(CC) $(CFLAGS) -c $<

install: all

# needed by boot-install script :
	echo `fcron -V 2>&1 | grep "^fcron "` > $(SRCDIR)/script/PREVIOUS_VERSION

	$(SRCDIR)/script/user-group $(USERNAME) $(GROUPNAME) $(ANSWERALL) $(SRCDIR)

# check if the directories we use exist, and if not, create them
	if test ! -d $(DESTSBIN); then $(INSTALL) -g $(ROOTGROUP) -o $(ROOTNAME) -m 755 -d $(DESTSBIN) ; fi
	if test ! -d $(DESTBIN); then $(INSTALL) -g $(ROOTGROUP) -o $(ROOTNAME) -m 755 -d $(DESTBIN) ; fi
	if test ! -d $(ETC); then $(INSTALL) -g $(ROOTGROUP) -o $(ROOTNAME) -m 755 -d $(ETC) ; fi
# create the spool dir (and change its mode if it already exists)
	$(INSTALL) -g $(GROUPNAME) -o $(USERNAME) -m 770 -d $(FCRONTABS)

	$(INSTALL) -g $(ROOTGROUP) -o $(ROOTNAME) -m 110 -s fcron $(DESTSBIN)
	$(INSTALL) -g $(GROUPNAME) -o $(USERNAME) -m 6111 -s fcrontab $(DESTBIN)
	$(INSTALL) -g $(ROOTGROUP) -o $(ROOTNAME) -m 6111 -s fcronsighup $(DESTBIN)
	test -f $(ETC)/fcron.allow || test -f $(ETC)/fcron.deny || $(INSTALL) -m 640 -o $(ROOTNAME) -g $(GROUPNAME) $(SRCDIR)/files/fcron.allow $(SRCDIR)/files/fcron.deny $(ETC)
	test -f $(ETC)/fcron.conf || $(INSTALL) -m 640 -o $(ROOTNAME) -g $(GROUPNAME) $(SRCDIR)/files/fcron.conf $(ETC)
	test "${USEPAM}" = "0" || $(SRCDIR)/script/install-pam-conf $(SRCDIR) $(ETC) $(ROOTNAME) $(ROOTGROUP) "$(INSTALL)"

	@(cd doc && make install)

# in order to get correct rights when upgrading :
	find $(FCRONTABS) -type f \( -name "*.orig" -a ! -name "root.orig" \) -exec chown $(USERNAME):$(GROUPNAME) {} \; -exec chmod 640 {} \;
	find $(FCRONTABS) -type f -name "root.orig" -exec chown $(ROOTNAME):$(GROUPNAME) {} \; -exec chmod 600 {} \;
	find $(FCRONTABS) -type f ! -name "*.orig" -exec chown $(ROOTNAME):$(ROOTGROUP) {} \; -exec chmod 600 {} \;
	if test -f $(ETC)/fcron.deny; then chown $(ROOTNAME):$(GROUPNAME) $(ETC)/fcron.deny ; fi
	if test -f $(ETC)/fcron.allow; then chown $(ROOTNAME):$(GROUPNAME) $(ETC)/fcron.allow ; fi

	$(SRCDIR)/script/boot-install "$(INSTALL) -o $(ROOTNAME)" $(DESTSBIN) $(DEBUG) $(FCRONTABS) $(ANSWERALL) $(SRCDIR)

install-boot: install
	if test "$(DEBUG)" = "1"; then \
	  $(SRCDIR)/script/boot-install "$(INSTALL) -o $(ROOTNAME)" $(DESTSBIN) 0 $(FCRONTABS)  $(ANSWERALL) $(SRCDIR);\
	fi

install-restart: install
	if test "$(DEBUG)" = "1"; then \
	  kill -TERM `pidof fcron` ; \
	  /etc/rc.d/init.d/fcron start ;\
	fi

uninstall:
	rm -f $(DESTSBIN)/fcron
	rm -f $(DESTBIN)/fcrontab
	rm -f $(DESTBIN)/fcronsighup
	@(cd doc && make uninstall)
	$(SRCDIR)/script/boot-uninstall

clean:
	rm -f *.o core
	rm -f fcron fcrontab fcronsighup convert-fcrontab files/fcron.conf

vclean: clean
	find ./ -name "*~" -exec rm -f {} \;
	rm -f config.log config.status config.h config.cache Makefile
	@(cd doc && make clean)


files/fcron.conf: files/fcron.conf.in config.h
	script/gen-in.pl files/fcron.conf.in files/fcron.conf ./

updatedoc:
	@(cd doc && make doc)

configure: configure.in
# update configure script, then Makefile and config.h, and finally 
# run make tar using the new Makefile (needed because the version
# is set in the configure.in file)
	autoconf
	./configure
	@($(MAKE) tar && \
		echo "---------------------------------------------" && \
		echo "Success !" && \
		echo "(Please ignore the following make error)" && \
		echo "---------------------------------------------" && \
		exit 999)

tar: configure updatedoc vclean

	echo $(VERSION) > ./VERSION

	@(find ./ -type f ! -regex '.*RCS.*' ! -regex "$(RCSNOCI)" \
             -exec ci -l {} \;)
# ci the doc files
	@(cd doc && make tar)

	@(find ./ -type f ! -regex '.*RCS.*' | \
             sed -e "s:^\./:fcron-$(VERSION)/:" > MANIFEST)
	@(cd ..; ln -s fcron fcron-$(VERSION))
	(cd ..; tar -czvf fcron-$(VERSION).src.tar.gz `cat fcron/MANIFEST`)
	@(cd ..; rm -f fcron-$(VERSION))

	@(cd ..; mv -f fcron-$(VERSION).src.tar.gz old-fcron-pkg/)
